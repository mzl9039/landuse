public static void main(String[] args) throws IOException {
	String relativePath = System.getProperty("user.dir");
	File path = new File(relativePath + "\\opti");

	Opti opti = new Opti();
	opti.instance = opti.inOut.read_data(path);	// 读取数据
	opti.init();								// 初始化参数，初始化蚁群
	int loopTime = 0;							// 初始化迭代次数
	while (condition(loopTime)) {
		if (opti.simulateAnts()) {				// 蚁群构造土地利用优化配置方案
			loopTime++;
			// 根据循环次数调节信息素挥发因子和启发因子
			opti.ph.adaptivePheromoneVolatileCoefficient(loopTime, 0.0);
			opti.adaptiveHeuristicFactor(loopTime);
			opti.updatePheros(loopTime); 		// 选择最优解，更新信息素
			opti.restartAnts(loopTime);			// 重新初始化蚁群
		}
	}
	opti.inOut.output();						// 输出Pareto最优解集
}

    // 初始化最小规划成本目标
    public Target initMPCTarget() {
        Target target = new PCTarget();
        target.setName("MPC");  // 最小规划成本
        target.setLuType(8);
        target.considerLuComp = true;
        target.setType("PC");
        target.setSuit(0.5);
        // 一共八大类，所有是八
        double t[][] = new double[8][8];
        // 0-7：耕 园 林 草 交 水 未 城
        t[0][1] = 0.7;  t[0][2] = 0.7;  t[0][3] = 0.5;  t[0][4] = 0.1;
        t[0][5] = 0.5;  t[0][7] = 0.1;
        t[1][0] = 0.7;  t[1][2] = 0.9;  t[1][3] = 0.9;  t[1][4] = 0.9;
        t[1][5] = 0.7;  t[1][7] = 0.3;
        t[2][0] = 0.9;  t[2][1] = 0.9;  t[2][3] = 0.5;  t[2][4] = 0.9;
        t[2][5] = 0.9;  t[2][7] = 0.9;
        t[3][0] = 0.1;  t[3][1] = 0.3;  t[3][2] = 0.7;  t[3][4] = 0.1;
        t[3][5] = 0.5;  t[3][7] = 0.1;
        t[6][0] = 0.3;  t[6][1] = 0.9;  t[6][2] = 0.7;  t[6][3] = 0.9;
        t[6][4] = 0.1;  t[6][5] = 0.3;  t[6][7] = 0.1;
        for (int i = 0; i < 8; i++) {
            for (int j = 0; j < 8; j++) {
                if (t[i][j] == 0) {
                    if (i != j) t[i][j] = 0.9999999999;    // 很高的成本，不鼓励转换，取一个非常非常接近1的数
                        // 目前采用 1-t[i][j]的方式求最大值，故，本身转换成本为0，转换后为1，符合逻辑
                    else t[i][j] = 0;
                }
            }
        }
        ((PCTarget)target).setSuits(t);
        return target;
    }

        public Target readLSETarget(String opti_file_name) throws IOException {
            Target target = readTarget(opti_file_name);
            target.setName("LSE");  // 土地利用适宜性评价：landuse suitability evaluation
            target.setLuType(4);      // 土地利用适宜性评价是4大类的
            target.setSuit(0.5);    // 设置土地利用适宜性与土地利用强度的权重
            target.setType("SE");      // 适宜性目标
            return target;
        }

            // TODO 最小规划成本，只支持8大类
            // 强烈建议：土地利用类型一定要统一
            public Target readTarget(String filename) throws IOException {
                Reader reader = null;
                BufferedReader bufferedReader = null;
                Target target = null;
                try {
                    reader = new InputStreamReader(new FileInputStream(filename), "UTF-8");
                    bufferedReader = new BufferedReader(reader);
                    String line = bufferedReader.readLine();
                    double lon, lat;
                    while (line != null) {
                        if (line.startsWith("EOF")) {
                            break;
                        } else if (line.startsWith("TYPE")) {
                            // 根据类型确实目标类型,type:1,2,3 分别对应 适宜度、转换成本、价值因子
                            line = line.split("[,]")[1];
                            if (line.equals("SE")) {
                                target = new SETarget();
                                target.setType("SE");
                                Suits targetSuits[][] = new Suits[this.gridLength][this.gridLength];
                                ((SETarget)target).setSuits(targetSuits);
                            } else if (line.equals("PC")) {
                                target = new PCTarget();
                                target.setType("PC");
                            } else if (line.equals("VL")) {
                                target = new VLTarget();
                                target.setType("VL");
                            }
                        }else if (line.startsWith("NAME")) {
                            target.setName(line.split("[,]")[1]);
                        } else if (line.startsWith("LAND_USE_TYPE")) {
                            target.setLuType(Integer.parseInt(line.split("[,]")[1]));
                        } else if (line.startsWith("SUIT")) {
                            target.setSuit(Double.parseDouble(line.split("[,]")[1]));
                        } else if (line.startsWith("DESC")) {
                            target.setDescription(line.split("[,]")[1]);
                        } else if (line.startsWith("CONS_LU")) {
                            int a = Integer.parseInt(line.split("[,]")[1]);
                            target.considerLuComp = a == 0 ? false : true;
                        } else {
                            if (target.getType() == "SE") {
                                // 对适宜度类目标的解析
                                String[] gridInfo = line.split("[,]");
                                Suits suits = new Suits();
                                suits.valMap.put(1, Double.parseDouble(gridInfo[5]) / 100);   // 农用地适宜度
                                suits.valMap.put(4, Double.parseDouble(gridInfo[6]) / 100);   // 林地适宜度
                                suits.valMap.put(3, Double.parseDouble(gridInfo[7]) / 100);   // 建设用地适宜度
                                suits.valMap.put(2, Double.parseDouble(gridInfo[8]) / 100);   // 绿地适宜度
                                lat = Double.parseDouble(gridInfo[12]);
                                lon = Double.parseDouble(gridInfo[13]);
                                Position p = geo2pos(lat, lon);
                                ((SETarget)target).getSuits()[p.x][p.y] = suits;
                            } else if (target.getType() == "PC") {
                                // 对规划成本等转移因子类目标的解析
                                String changeSuit[] = line.split("[,]");
                                if (target.getLuType() == 8) {
                                    ((PCTarget) target).getSuits()
                                            [Utils.lu8toIdx(Integer.parseInt(changeSuit[0]))]
                                            [Utils.lu8toIdx(Integer.parseInt(changeSuit[1]))] =
                                            Double.parseDouble(changeSuit[2]);
                                } else if (target.getLuType() == 4) {
                                    ((PCTarget) target).getSuits()
                                            [Utils.lu4toIdx(Integer.parseInt(changeSuit[0]))]
                                            [Utils.lu4toIdx(Integer.parseInt(changeSuit[1]))] =
                                            Double.parseDouble(changeSuit[2]);
                                }
                            } else if (target.getType() == "VL") {
                                // 对价值类目标的解析
                                String typeSuit[] = line.split("[,]");
                                ((VLTarget)target).getSuits().put(Integer.parseInt(typeSuit[0]), Double.parseDouble(typeSuit[1]));
                            }
                        }
                        line = bufferedReader.readLine();
                    }

                } catch (IOException e) {
                    e.printStackTrace();
                } finally {
                    bufferedReader.close();
                    reader.close();
                }
                return target;
            }